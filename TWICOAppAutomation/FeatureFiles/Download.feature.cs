// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
// Generation customised by SpecFlow.Contrib.Variants
namespace SurakshaAutomation.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Download")]
    public partial class DownloadFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Download.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "FeatureFiles", "Download", "A short summary of the feature", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify FIG able to navigate to Download screen")]
        [NUnit.Framework.CategoryAttribute("durgaID7")]
        public virtual void VerifyFIGAbleToNavigateToDownloadScreen()
        {
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify FIG able to navigate to Download screen", null, new string[] {
                        "durgaID7"}, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given("Login into Suraksha Portal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.When("Click Create application on the left side of the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.And("Click on Download in Create Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.Then("Verify User should be able to navigate to Download screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Muthoot Finance", "North", "ANOOPGARH", "CD000150-Business Loan", "01/03/2003 00:00:00", "24/03/2003 00:00:00", "DOGH", "", null, TestName="VerifyFIGAbleToDownloadInZIPFormatForTheSearchedDetails with \"Muthoot Finance\", \"" +
            "North\", \"ANOOPGARH\", \"CD000150-Business Loan\", \"01/03/2003 00:00:00\", \"24/03/200" +
            "3 00:00:00\", \"DOGH\", \"\"")]
        public virtual void VerifyFIGAbleToDownloadInZIPFormatForTheSearchedDetails(string financialInstitution, string region, string branch, string policyNumber, string fromDate, string toDate, string documentType, string loanID, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Pavan",
                    "DataSource:DownloadSearch.xlsx"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Financial Institution", financialInstitution);
            argumentsOfScenario.Add("Region", region);
            argumentsOfScenario.Add("Branch", branch);
            argumentsOfScenario.Add("Policy Number", policyNumber);
            argumentsOfScenario.Add("From Date", fromDate);
            argumentsOfScenario.Add("To Date", toDate);
            argumentsOfScenario.Add("Document Type", documentType);
            argumentsOfScenario.Add("Loan ID", loanID);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify FIG able to download in ZIP format for the searched details", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given("Login into Suraksha Portal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.When("Click Create application on the left side of the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.And("Click on Download in Create Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.Then(string.Format("Enter the search details like {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}", financialInstitution, region, branch, policyNumber, fromDate, toDate, documentType, loanID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            testRunner.And("click on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("Download the file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.Then("User should be able to download the file of searched results in ZIP format", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User should be able to see the results for provided search details")]
        [NUnit.Framework.CategoryAttribute("Nikhila_DownloadScreen")]
        public virtual void UserShouldBeAbleToSeeTheResultsForProvidedSearchDetails()
        {
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User should be able to see the results for provided search details", null, new string[] {
                        "Nikhila_DownloadScreen"}, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given("Enter Suraksha Portal URL in the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.When("Enter Emaild ID and Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("Click on Sign In button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            testRunner.Then("Click Create application on the left side of the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            testRunner.Then("user should click on download option in the left menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            testRunner.And("User should enter FI,region,Branch,policynumber,from-To date,Document type and cl" +
                    "ick on search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("validate headers of Financial Institute Data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.Then("Click on download Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
